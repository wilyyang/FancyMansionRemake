// Generated by Dagger (https://dagger.dev).
package com.cheesejuice.core.common.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata("com.cheesejuice.core.common.di.DispatcherDefault")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HiltCommon_ProvidesDispatcherDefaultFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return providesDispatcherDefault();
  }

  public static HiltCommon_ProvidesDispatcherDefaultFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher providesDispatcherDefault() {
    return Preconditions.checkNotNullFromProvides(HiltCommon.INSTANCE.providesDispatcherDefault());
  }

  private static final class InstanceHolder {
    private static final HiltCommon_ProvidesDispatcherDefaultFactory INSTANCE = new HiltCommon_ProvidesDispatcherDefaultFactory();
  }
}
